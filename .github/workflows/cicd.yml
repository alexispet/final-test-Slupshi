---
name: learn-github-actions
run-name: ${{ github.actor }} is running CI/CD
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: lint
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: develop
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm audit --audit-level=high  

  test:
    runs-on: ubuntu-latest    
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      NODE_ENV: development     
    steps:       
      - uses: actions/checkout@v4
      - uses: adambirds/docker-compose-action@v1.3.0
        with:
          compose-file: "./docker-compose.dev.yml"
          down-flags: "--volumes"
          services: |
            api-dev
            db-dev
          test-container: api-dev
          test-command: "npm run test"

  build-image-development:
    runs-on: ubuntu-latest
    needs: [test]
    env:
      HOST: ${{ secrets.SSH_HOST }}
    environment:
      name: development
      url: "http://ec2-54-92-196-192.compute-1.amazonaws.com:3000"
      #url: "http://$HOST:3000"
    if: github.ref_name == 'develop'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/alexispet/final-test-slupshi/api:develop

  build-image-production:
    runs-on: ubuntu-latest
    needs: [test]
    env:
      HOST: ${{ secrets.SSH_HOST }}
    environment:
      name: production
      url: "http://ec2-54-92-196-192.compute-1.amazonaws.com:80"
      #url: "http://$HOST:80"
    if: github.ref_name == 'main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/alexispet/final-test-slupshi/api:latest

  lighthouse-dev:
    needs: [build-image-development]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://ec2-52-91-226-48.compute-1.amazonaws.com:3000
          uploadArtifacts: true
          temporaryPublicStorage: true

  lighthouse-prod:
    needs: [build-image-production]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://ec2-52-91-226-48.compute-1.amazonaws.com:80
          uploadArtifacts: true
          temporaryPublicStorage: true